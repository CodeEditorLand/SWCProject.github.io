(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{340:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),p=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,f=b["".concat(o,".").concat(d)]||b[d]||s[d]||c;return n?a.a.createElement(f,i(i({ref:t},u),{},{components:n})):a.a.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<c;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},92:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),c=(n(0),n(340)),o={title:"Changelog: swc v1.1.57",author:"DongYoon Kang",authorURL:"http://github.com/kdy1",authorFBID:0x5af8dbecdbce},i={permalink:"/blog/2020/06/11/swc-1.1.57",source:"@site/blog/2020-06-11-swc-1.1.57.md",description:"Bugfixes",date:"2020-06-11T00:00:00.000Z",tags:[],title:"Changelog: swc v1.1.57",readingTime:.52,truncated:!1,prevItem:{title:"Changelog: swc v1.1.58",permalink:"/blog/2020/06/13/swc-1.1.58"},nextItem:{title:"Changelog: swc v1.1.56",permalink:"/blog/2020/06/10/swc-1.1.56"}},l=[{value:"Bugfixes",id:"bugfixes",children:[{value:"Source map (#835)",id:"source-map-835",children:[]},{value:"yield* (#833)",id:"yield-833",children:[]},{value:"BigInt literals (#837)",id:"bigint-literals-837",children:[]}]}],u={toc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"bugfixes"},"Bugfixes"),Object(c.b)("h3",{id:"source-map-835"},"Source map (",Object(c.b)("a",Object(r.a)({parentName:"h3"},{href:"https://github.com/swc-project/swc/pull/835"}),"#835"),")"),Object(c.b)("p",null,"The source map is fixed. I verified that generated source map point the original source correctly by using ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://sokra.github.io/source-map-visualization/"}),"source map visualizer"),"."),Object(c.b)("h3",{id:"yield-833"},"yield","*"," (",Object(c.b)("a",Object(r.a)({parentName:"h3"},{href:"https://github.com/swc-project/swc/pull/833"}),"#833"),")"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"regenerator")," pass had a bug related to ",Object(c.b)("inlineCode",{parentName:"p"},"yield*"),"."),Object(c.b)("p",null,"Previously, ",Object(c.b)("inlineCode",{parentName:"p"},"swc")," broke code like"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"function* gen() {\n  yield* [1, 2, 3];\n}\n")),Object(c.b)("p",null,"But it's fixed and the function above correctly yields 3 times."),Object(c.b)("h3",{id:"bigint-literals-837"},"BigInt literals (",Object(c.b)("a",Object(r.a)({parentName:"h3"},{href:"https://github.com/swc-project/swc/pull/837"}),"#837"),")"),Object(c.b)("p",null,"There was no integration test for bigint literals and the test suite failed to catch it.\nPreviously, due to the bug of swc_ecma_codegen, bigint literal cannot be printed"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"var foo = 2n + 7n;\n")))}p.isMDXComponent=!0}}]);