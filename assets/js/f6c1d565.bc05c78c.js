(self.webpackChunk=self.webpackChunk||[]).push([[9225],{3905:(e,t,r)=>{"use strict";r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,g=u["".concat(i,".").concat(m)]||u[m]||f[m]||a;return r?n.createElement(g,c(c({ref:t},l),{},{components:r})):n.createElement(g,c({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,c[1]=p;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8368:(e,t,r)=>{"use strict";r.r(t),r.d(t,{frontMatter:()=>p,contentTitle:()=>i,metadata:()=>s,toc:()=>l,default:()=>u});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),c=["components"],p={title:"Changelog: swc v1.1.6",author:"DongYoon Kang",authorURL:"http://github.com/kdy1",authorFBID:0x5af8dbecdbce},i=void 0,s={permalink:"/blog/2019/12/14/swc-1.1.6",source:"@site/blog/2019-12-14-swc-1.1.6.md",title:"Changelog: swc v1.1.6",description:"performance of transforms",date:"2019-12-14T00:00:00.000Z",formattedDate:"December 14, 2019",tags:[],readingTime:.28,truncated:!1,prevItem:{title:"Changelog: swc v1.1.7",permalink:"/blog/2019/12/21/swc-1.1.7"},nextItem:{title:"Changelog: swc v1.1.5",permalink:"/blog/2019/12/11/swc-1.1.5"}},l=[{value:"performance of transforms",id:"performance-of-transforms",children:[]},{value:"typescript parser bugfix (#507)",id:"typescript-parser-bugfix-507",children:[]}],f={toc:l};function u(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"performance-of-transforms"},"performance of transforms"),(0,a.kt)("p",null,"Overall performance of transform passes are improved, thanks to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/swc-project/swc/commit/3ec395ba7519a552d20d8120877fae2f270de887"},"hygiene optimization"),". Especially, performance of resolver pass is drastically (~60%) improved."),(0,a.kt)("h2",{id:"typescript-parser-bugfix-507"},"typescript parser bugfix (",(0,a.kt)("a",{parentName:"h2",href:"https://github.com/swc-project/swc/pull/507"},"#507"),")"),(0,a.kt)("p",null,"There was a bug which sets target of parser to es3, and it result in a bug that parser fails to parse getter and setter in typescript."))}u.isMDXComponent=!0}}]);