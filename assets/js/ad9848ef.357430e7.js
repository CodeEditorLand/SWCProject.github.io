"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7301],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>g});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=t.createContext({}),p=function(e){var n=t.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=p(e.components);return t.createElement(a.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(r),g=o,f=m["".concat(a,".").concat(g)]||m[g]||u[g]||i;return r?t.createElement(f,l(l({ref:n},c),{},{components:r})):t.createElement(f,l({ref:n},c))}));function g(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=m;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var p=2;p<i;p++)l[p]=r[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5094:(e,n,r)=>{r.r(n),r.d(n,{frontMatter:()=>s,contentTitle:()=>a,metadata:()=>p,toc:()=>c,default:()=>m});var t=r(7462),o=r(3366),i=(r(7294),r(3905)),l=["components"],s={id:"usage-plugin",title:"Using custom plugins with swc",sidebar_label:"Plugin"},a=void 0,p={unversionedId:"usage-plugin",id:"usage-plugin",isDocsHomePage:!1,title:"Using custom plugins with swc",description:"Helpers",source:"@site/docs/usage-plugin.md",sourceDirName:".",slug:"/usage-plugin",permalink:"/docs/usage-plugin",version:"current",lastUpdatedBy:"Kraig Walker",lastUpdatedAt:1628877690,formattedLastUpdatedAt:"8/13/2021",frontMatter:{id:"usage-plugin",title:"Using custom plugins with swc",sidebar_label:"Plugin"},sidebar:"usage",previous:{title:"swc (core)",permalink:"/docs/usage-core"},next:{title:"@babel/core",permalink:"/docs/migrating-from-babel-core"}},c=[{value:"Helpers",id:"helpers",children:[{value:"Visitor",id:"visitor",children:[]},{value:"Using multiple plugins",id:"using-multiple-plugins",children:[]}]}],u={toc:c};function m(e){var n=e.components,r=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"helpers"},"Helpers"),(0,i.kt)("p",null,"There are some helpers to help writing a transform."),(0,i.kt)("h3",{id:"visitor"},"Visitor"),(0,i.kt)("p",null,"See: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/swc-project/plugin-strip-console"},"https://github.com/swc-project/plugin-strip-console")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { CallExpression, Expression } from "@swc/core";\nimport Visitor from "@swc/core/Visitor";\n\nclass ConsoleStripper extends Visitor {\n  visitCallExpression(e: CallExpression): Expression {\n    if (e.callee.type !== "MemberExpression") {\n      return e;\n    }\n\n    if (\n      e.callee.object.type === "Identifier" &&\n      e.callee.object.value === "console"\n    ) {\n      if (e.callee.property.type === "Identifier") {\n        return {\n          type: "UnaryExpression",\n          span: e.span,\n          operator: "void",\n          argument: {\n            type: "NumericLiteral",\n            span: e.span,\n            value: 0\n          }\n        };\n      }\n    }\n\n    return e;\n  }\n}\n\nconst out = transformSync(\n  `\nif (foo) {\n    console.log("Foo")\n} else {\n    console.log("Bar")\n}`,\n  {\n    plugin: m => new ConsoleStripper().visitProgram(m)\n  }\n);\n\nout.code ===\n  `if (foo) {\n    void 0;\n} else {\n    void 0;\n}`;\n')),(0,i.kt)("p",null,"You can turn on optimizer with ",(0,i.kt)("a",{parentName:"p",href:"/docs/configuring-swc#jsctransformoptimizer"},(0,i.kt)("inlineCode",{parentName:"a"},"jsc.transform.optimizer"))," to remove ",(0,i.kt)("inlineCode",{parentName:"p"},"void 0"),"."),(0,i.kt)("h3",{id:"using-multiple-plugins"},"Using multiple plugins"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { transformSync, plugins } from "@swc/core";\n\nconst out = transformSync(src, {\n  plugin: plugins(pluginA, pluginB)\n});\n')))}m.isMDXComponent=!0}}]);