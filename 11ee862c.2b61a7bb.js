(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{352:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return j}));var a=t(0),r=t.n(a);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=r.a.createContext({}),p=function(e){var n=r.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},b=function(e){var n=p(e.components);return r.a.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),b=p(t),m=a,j=b["".concat(c,".").concat(m)]||b[m]||u[m]||l;return t?r.a.createElement(j,s(s({ref:n},i),{},{components:t})):r.a.createElement(j,s({ref:n},i))}));function j(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,c=new Array(l);c[0]=m;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var i=2;i<l;i++)c[i]=t[i];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},94:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return b}));var a=t(3),r=t(7),l=(t(0),t(352)),c=["components"],s={id:"configuring-swc",title:"Configuring swc",sidebar_label:"Configuring swc"},o={unversionedId:"configuring-swc",id:"configuring-swc",isDocsHomePage:!1,title:"Configuring swc",description:"swc can be configured with .swcrc file.",source:"@site/docs/configuring-swc.md",slug:"/configuring-swc",permalink:"/docs/configuring-swc",version:"current",lastUpdatedBy:"\uac15\ub3d9\uc724",lastUpdatedAt:1624780162,sidebar_label:"Configuring swc",sidebar:"usage",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"preset-env",permalink:"/docs/preset-env"}},i=[{value:"preset-env",id:"preset-env",children:[]},{value:"jsc.externalHelpers",id:"jscexternalhelpers",children:[]},{value:"jsc.parser",id:"jscparser",children:[]},{value:"jsc.target",id:"jsctarget",children:[]},{value:"jsc.loose",id:"jscloose",children:[]},{value:"jsc.transform",id:"jsctransform",children:[{value:"jsc.transform.legacyDecorator",id:"jsctransformlegacydecorator",children:[]},{value:"jsc.transform.decoratorMetadata",id:"jsctransformdecoratormetadata",children:[]},{value:"jsc.transform.react",id:"jsctransformreact",children:[]},{value:"jsc.transform.constModules",id:"jsctransformconstmodules",children:[]},{value:"jsc.transform.optimizer",id:"jsctransformoptimizer",children:[]}]},{value:"jsc.keepClassNames",id:"jsckeepclassnames",children:[]},{value:"jsc.paths",id:"jscpaths",children:[]},{value:"module",id:"module",children:[]},{value:"minify",id:"minify",children:[]},{value:"Multiple entries",id:"multiple-entries",children:[{value:"test",id:"test",children:[]},{value:"exclude",id:"exclude",children:[]}]}],p={toc:i};function b(e){var n=e.components,t=Object(r.a)(e,c);return Object(l.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"swc")," can be configured with ",Object(l.b)("inlineCode",{parentName:"p"},".swcrc")," file."),Object(l.b)("h2",{id:"preset-env"},"preset-env"),Object(l.b)("p",null,"See ",Object(l.b)("a",{parentName:"p",href:"/docs/preset-env"},"preset-env")," for using swc with ",Object(l.b)("inlineCode",{parentName:"p"},"browserslist"),"."),Object(l.b)("h1",{id:"jsc"},"jsc"),Object(l.b)("p",null,"This is optional and defaults to"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "parser": {\n      "syntax": "ecmascript",\n      "jsx": false,\n      "dynamicImport": false,\n      "privateMethod": false,\n      "functionBind": false,\n      "exportDefaultFrom": false,\n      "exportNamespaceFrom": false,\n      "decorators": false,\n      "decoratorsBeforeExport": false,\n      "topLevelAwait": false,\n      "importMeta": false\n    },\n    "transform": null,\n    "target": "es5",\n    "loose": false,\n    "externalHelpers": false,\n    // Requires v1.2.50 or upper and requires target to be es2016 or upper.\n    "keepClassNames": false\n  }\n}\n')),Object(l.b)("h2",{id:"jscexternalhelpers"},"jsc.externalHelpers"),Object(l.b)("p",null,"You can use helpers from an external module named ",Object(l.b)("inlineCode",{parentName:"p"},"@swc/helpers"),"."),Object(l.b)("p",null,"While bundling, this option will greatly reduce your file size."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "externalHelpers": true\n  }\n}\n')),Object(l.b)("h2",{id:"jscparser"},"jsc.parser"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"typescript"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "parser": {\n      "syntax": "typescript",\n      "tsx": false,\n      "decorators": false,\n      "dynamicImport": false\n    }\n  }\n}\n')),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"ecmascript"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "parser": {\n      "syntax": "ecmascript",\n      "jsx": false,\n      "dynamicImport": false,\n      "privateMethod": false,\n      "functionBind": false,\n      "classPrivateProperty": false,\n      "exportDefaultFrom": false,\n      "exportNamespaceFrom": false,\n      "decorators": false,\n      "decoratorsBeforeExport": false,\n      "importMeta": false\n    }\n  }\n}\n')),Object(l.b)("h2",{id:"jsctarget"},"jsc.target"),Object(l.b)("p",null,"Starting from ",Object(l.b)("inlineCode",{parentName:"p"},"@swc/core")," v1.0.27, you can specify the target environment by using the field."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    // Disable es3 / es5 / es2015 transforms\n    "target": "es2016"\n  }\n}\n')),Object(l.b)("h2",{id:"jscloose"},"jsc.loose"),Object(l.b)("p",null,"Starting from ",Object(l.b)("inlineCode",{parentName:"p"},"@swc/core")," v1.1.4, you can enable loose mode by"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "loose": true\n  }\n}\n')),Object(l.b)("p",null,"In loose mode, swc generates more efficient code."),Object(l.b)("h2",{id:"jsctransform"},"jsc.transform"),Object(l.b)("p",null,"Example"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "transform": {\n      "react": {\n        "pragma": "React.createElement",\n        "pragmaFrag": "React.Fragment",\n        "throwIfNamespace": true,\n        "development": false,\n        "useBuiltins": false\n      },\n      "optimizer": {\n        "globals": {\n          "vars": {\n            "__DEBUG__": "true"\n          }\n        }\n      }\n    }\n  }\n}\n')),Object(l.b)("h3",{id:"jsctransformlegacydecorator"},"jsc.transform.legacyDecorator"),Object(l.b)("p",null,"You can use legacy decorators with ",Object(l.b)("inlineCode",{parentName:"p"},"swc"),". To enable legacy decorator, set ",Object(l.b)("inlineCode",{parentName:"p"},"jsc.transform.legacyDecorator")," and ",Object(l.b)("inlineCode",{parentName:"p"},"jsc.parser.decorators")," to true."),Object(l.b)("p",null,"e.g."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "parser": {\n      "syntax": "ecmascript",\n      "decorators": true\n    },\n    "transform": {\n      "legacyDecorator": true\n    }\n  }\n}\n')),Object(l.b)("h3",{id:"jsctransformdecoratormetadata"},"jsc.transform.decoratorMetadata"),Object(l.b)("p",null,"If you are using typescript and decorators with ",Object(l.b)("inlineCode",{parentName:"p"},"emitDecoratorMetadata")," enabled, you can use ",Object(l.b)("inlineCode",{parentName:"p"},"swc")," for faster iteration like"),Object(l.b)("p",null,"e.g."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "parser": {\n      "syntax": "typescript",\n      "decorators": true\n    },\n    "transform": {\n      "legacyDecorator": true,\n      "decoratorMetadata": true\n    }\n  }\n}\n')),Object(l.b)("p",null,"Note: This feature requires ",Object(l.b)("inlineCode",{parentName:"p"},"v1.2.13+"),"."),Object(l.b)("h3",{id:"jsctransformreact"},"jsc.transform.react"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"runtime"))),Object(l.b)("p",null,"Possible values: ",Object(l.b)("inlineCode",{parentName:"p"},"automatic"),", ",Object(l.b)("inlineCode",{parentName:"p"},"classic"),"."),Object(l.b)("p",null,"Use ",Object(l.b)("inlineCode",{parentName:"p"},"automatic")," to use new jsx runtimes."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"importSource"))),Object(l.b)("p",null,"Only for ",Object(l.b)("inlineCode",{parentName:"p"},"runtime: automatic"),". ",Object(l.b)("inlineCode",{parentName:"p"},"react")," by default."),Object(l.b)("p",null,"This option can be overrided with ",Object(l.b)("inlineCode",{parentName:"p"},"@jsxImportSource foo"),"."),Object(l.b)("p",null,"Determines the runtime library to import."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"pragma"),"\nReplace the function used when compiling JSX expressions.")),Object(l.b)("p",null,"This option can be overrided with ",Object(l.b)("inlineCode",{parentName:"p"},"@jsx foo"),"."),Object(l.b)("p",null,"Defaults to ",Object(l.b)("inlineCode",{parentName:"p"},"React.createElement"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"pragmaFrag"),"\nReplace the component used when compiling JSX fragments.")),Object(l.b)("p",null,"This option can be overrided with ",Object(l.b)("inlineCode",{parentName:"p"},"@jsxFrag foo"),"."),Object(l.b)("p",null,"Defaults to ",Object(l.b)("inlineCode",{parentName:"p"},"React.Fragment")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"throwIfNamespace"),"\nToggles whether or not to throw an error if an XML namespaced tag name is used. For example: ",Object(l.b)("inlineCode",{parentName:"li"},"<f:image />"))),Object(l.b)("p",null,"Though the JSX spec allows this, it is disabled by default since React's JSX does not currently have support for it."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"development"),"\nToggles plugins that aid in development, such as ",Object(l.b)("inlineCode",{parentName:"p"},"jsx-self")," and ",Object(l.b)("inlineCode",{parentName:"p"},"jsx-source"),".")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"useBuiltins"),"\nUse ",Object(l.b)("inlineCode",{parentName:"p"},"Object.assign()")," instead of ",Object(l.b)("inlineCode",{parentName:"p"},"_extends"),". Defaults to false.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"refresh")))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"interface ReactRefreshConfig {\n  refreshReg: String;\n  refreshSig: String;\n  emitFullSignatures: boolean;\n}\n")),Object(l.b)("h3",{id:"jsctransformconstmodules"},"jsc.transform.constModules"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},".swcrc"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "transform": {\n      "constModules": {\n        "globals": {\n          "@ember/env-flags": {\n            "DEBUG": "true"\n          },\n          "@ember/features": {\n            "FEATURE_A": "false",\n            "FEATURE_B": "true"\n          }\n        }\n      }\n    }\n  }\n}\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'import { DEBUG } from "@ember/env-flags";\nimport { FEATURE_A, FEATURE_B } from "@ember/features";\n\nconsole.log(DEBUG, FEATURE_A, FEATURE_B);\n')),Object(l.b)("p",null,"becomes"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"console.log(true, false, true);\n")),Object(l.b)("h3",{id:"jsctransformoptimizer"},"jsc.transform.optimizer"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Note"),": Optimizer of the swc assumes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"It's a module or wrapped in an iife.")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Accessing (get) global variables does not have a side-effect.")),Object(l.b)("p",null,"It is the same assumption as the google closure compiler."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"You don't add fields to literals like a numeric literal, regular expression or a string literal.")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Files are served as gzipped.")),Object(l.b)("p",null,"It means that swc will not focus on reducing the size of non-gzipped file size."),Object(l.b)("p",null,"Setting this to ",Object(l.b)("inlineCode",{parentName:"p"},"undefined")," skips optimizer pass"),Object(l.b)("h4",{id:"jsctransformoptimizerglobals"},"jsc.transform.optimizer.globals"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"vars"),"\nVariables to inline.")),Object(l.b)("p",null,"e.g.\n",Object(l.b)("inlineCode",{parentName:"p"},".swcrc"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "transform": {\n      "optimizer": {\n        "globals": {\n          "vars": {\n            "__DEBUG__": "true"\n          }\n        }\n      }\n    }\n  }\n}\n')),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"npx swc '__DEBUG__' --filename input.js"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"true;\n")),Object(l.b)("h4",{id:"jsctransformoptimizerjsonify"},"jsc.transform.optimizer.jsonify"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Note:")," This feature requires ",Object(l.b)("inlineCode",{parentName:"p"},"v1.1.1"),"+"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"minCost"),"\nIf cost of parsing a pure object literal is larger than this value, the object literal is converted to ",Object(l.b)("inlineCode",{parentName:"li"},'JSON.parse(\'{"foo": "bar"}\')'),". Defaults to 1024.")),Object(l.b)("p",null,"e.g.\n",Object(l.b)("inlineCode",{parentName:"p"},".swcrc"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "jsc": {\n    "transform": {\n      "optimizer": {\n        "jsonify": {\n          "minCost": 0\n        }\n      }\n    }\n  }\n}\n')),Object(l.b)("p",null,"This will change all ",Object(l.b)("strong",{parentName:"p"},"pure")," object literals to ",Object(l.b)("inlineCode",{parentName:"p"},'JSON.parse("")'),"."),Object(l.b)("h2",{id:"jsckeepclassnames"},"jsc.keepClassNames"),Object(l.b)("p",null,"Requires v1.2.50 or upper and requires target to be es2016 or upper."),Object(l.b)("p",null,"Enabling this option will make swc preserve original class names."),Object(l.b)("h2",{id:"jscpaths"},"jsc.paths"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Required ",Object(l.b)("a",{parentName:"p",href:"mailto:swc@1.2.62"},"swc@1.2.62"),"+")),Object(l.b)("p",null,"Syntax is identical as it of ",Object(l.b)("inlineCode",{parentName:"p"},"tsconfig.json"),"."),Object(l.b)("p",null,"See ",Object(l.b)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping"},"https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping")," for more details."),Object(l.b)("h2",{id:"module"},"module"),Object(l.b)("p",null,"To configure module system, see the ",Object(l.b)("a",{parentName:"p",href:"./swcrc-module"},"docs")," for it."),Object(l.b)("h2",{id:"minify"},"minify"),Object(l.b)("p",null,"To get minified output, you can configure swc by"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},".swcrc"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "minify": true\n}\n')),Object(l.b)("h2",{id:"multiple-entries"},"Multiple entries"),Object(l.b)("p",null,"Starting with ",Object(l.b)("inlineCode",{parentName:"p"},"v1.0.47"),", you can specify multiple entries. For example,"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "test": ".*.js$",\n    "module": {\n      "type": "commonjs"\n    }\n  },\n  {\n    "test": ".*.ts$",\n    "module": {\n      "type": "amd"\n    }\n  }\n]\n')),Object(l.b)("p",null,"this make swc compile javascript files as common js module (uses ",Object(l.b)("inlineCode",{parentName:"p"},"require('foo')"),") and compile typescript files as amd modules."),Object(l.b)("p",null,"Note that ",Object(l.b)("inlineCode",{parentName:"p"},"test")," option can be used to transcompile only typescript files, like"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "test": ".*.ts$",\n  "jsc": {\n    "parser": {\n      "syntax": "typescript",\n      "tsx": false,\n      "decorators": true,\n      "dynamicImport": true\n    }\n  }\n}\n')),Object(l.b)("h3",{id:"test"},"test"),Object(l.b)("p",null,"Type: Regex / Regex[]"),Object(l.b)("p",null,"Usage:"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},".swcrc"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "test": ".*.ts$",\n  "jsc": {\n    "parser": {\n      "syntax": "typescript",\n      "tsx": false,\n      "decorators": true,\n      "dynamicImport": true\n    }\n  }\n}\n')),Object(l.b)("h3",{id:"exclude"},"exclude"),Object(l.b)("p",null,"Type: Regex / Regex[]"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},".swcrc"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "exclude": [".*.js$", ".*.map$"],\n  "jsc": {\n    "parser": {\n      "syntax": "typescript",\n      "tsx": false,\n      "decorators": true,\n      "dynamicImport": true\n    }\n  }\n}\n')),Object(l.b)("h1",{id:"sourcemaps"},"sourceMaps"),Object(l.b)("p",null,"Starting from ",Object(l.b)("inlineCode",{parentName:"p"},"v1.2.50"),", you can enable source map by adding ",Object(l.b)("inlineCode",{parentName:"p"},"sourceMaps: true")," or ",Object(l.b)("inlineCode",{parentName:"p"},"sourceMaps: 'inline'")," to the ",Object(l.b)("inlineCode",{parentName:"p"},".swcrc"),"."),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "sourceMaps": true\n}\n')))}b.isMDXComponent=!0}}]);